/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

stroke         -0.002;

#includeEtc "caseDicts/mesh/generation/snappyHexMeshDict.cfg"

castellatedMesh on;
snap            on;
addLayers       off;

geometry
{
    inlet.stl
    {
        type triSurfaceMesh;
        name inlet;
    }

    outlet.stl
    {
        type triSurfaceMesh;
        name outlet;
    }

    valve.stl
    {
        type triSurfaceMesh;
        name valve;
    }

    walls.stl
    {
        type triSurfaceMesh;
        name walls;
    }

    cylinder
    {
        type   searchableCylinder;
        point1 (0 0 0.006);
        point2 (0 0 $stroke);
        radius 0.015;
    }
};

castellatedMeshControls
{
    features();

    refinementSurfaces
    {
        "inlet|outlet"
        {
            level (0 2);
            patchInfo { type patch; }
        }

        "valve|walls"
        {
            level (2 2);
            patchInfo { type wall; }
        }
    }

    refinementRegions
    {
        cylinder
        {
            mode inside;
            levels ((1 3));
        }
    }

    locationInMesh (0.0175 0 -0.0175); // point on the cylnder axle

    nCellsBetweenLevels 2;
}

snapControls
{
    implicitFeatureSnap true;
    explicitFeatureSnap false;
}

addLayersControls
{
    layers
    {
        "valve|walls"
        { 
            nSurfaceLayers 2;
        }
    }

    relativeSizes       true; // false, usually with firstLayerThickness
    expansionRatio      1; // 1
    finalLayerThickness 0.8;
    minThickness        1e-3;
    // firstLayerThickness 1.1;

    // maxThicknessToMedialRatio 0.6;
}

// writeFlags
// (
//     scalarLevels    // write volScalarField with cellLevel for postprocessing
//     layerSets       // write cellSets, faceSets of faces in layer
//     layerFields     // write volScalarField for layer coverage
// );

mergeTolerance 1e-6;

// ************************************************************************* //